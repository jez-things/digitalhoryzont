#!/bin/sh
#
: <<=cut

=head1 NAME

environment - Plugin to monitor local environment ;)

=head1 APPLICABLE SYSTEMS

All Linux systems

=head1 CONFIGURATION


=head2 EXAMPLE WARNING AND CRITICAL SETTINGS
=head1 INTERPRETATION

The plugin gets temperature from two ds18b20 thermometrs

=head1 MAGIC MARKERS

  #%# family=auto
  #%# capabilities=autoconf


=head1 VERSION

  $Id: munin-environmental,v 1.1 2014/03/12 23:42:59 root Exp root $

=head1 BUGS


Otherwise none known

=head1 AUTHOR

Jez

=head1 LICENSE

BSD

=cut


. $MUNIN_LIBDIR/plugins/plugin.sh

if [ "$1" = "autoconf" ]; then
	if [ -r /proc/stat ]; then
		echo yes
		exit 0
	else
		echo no
		exit 0
	fi
fi


if [ "$1" = "config" ]; then

	echo 'graph_title Environmental statistics'
	#echo "graph_order tempout  tempin" $extinfo
	 echo "graph_args --base 1000 -r -l 0"
	 echo 'graph_vlabel temperatura '
	 echo 'graph_scale no'
	 echo 'graph_info This graph shows temperature from DS18B20 which is located on window'
	 echo 'graph_category environmental'
	 echo 'graph_period second'
	#echo 'tempout.draw AREA'
	#echo 'tempout.min -40'
	#echo 'tempout.max 40'
	#echo 'tempout.type DERIVE'
	 echo 'tempout.label temps'
	 echo "tempout.info temperature outside" 
	 echo 'tempin.label temp wewn.'
	#echo 'tempin.draw STACK'
	#echo 'tempin.min -40'
	#echo 'tempin.type DERIVE'
	 echo 'tempin.info Temperatura wewnatrz z ds18b20'
	exit 0
fi

get_ds18b20_temp () 
{
	ds18_in="/sys/bus/w1/devices/28-0000052cec2c/w1_slave"
	ds18_out="/sys/bus/w1/devices/28-0000052e21ac/w1_slave"
	intemp=$(awk "/t=/{str=int(substr(\$10,3)) / 1000; print str;}" $ds18_in )

	outtemp=$(awk '/t=/{str=int(substr($10,3)) / 1000; print str;}' $ds18_out)
	printf "tempout.value %f\n" "$outtemp"

	printf "tempin.value %f\n" "$intemp"
}

get_ds18b20_temp;
# Note: Counters/derive need to report integer values.  Also we need
# to avoid 10e+09 and the like %.0f should do this.

